# Generated by Django 4.1.5 on 2023-01-05 16:54

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import users.models.custom_user
import utils.fields
import utils.fields.enums
import utils.validators.regex
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('title', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.UserTitle, max_length=100, null=True, verbose_name='user title')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='middle name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('gender', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.Gender, max_length=100, null=True, verbose_name='gender')),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Head coach'), (2, 'Coach'), (3, 'Squaddie'), (4, 'Elite squaddie'), (5, 'Fan')], null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('avatar', models.ImageField(default='default_avatar.jpg', upload_to=users.models.custom_user.user_directory_path, verbose_name='avatar')),
                ('dob', models.DateTimeField(blank=True, null=True, verbose_name='date of birth')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[utils.validators.regex.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('about', models.TextField(blank=True, max_length=500, verbose_name='about')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('two_factor_authentication_active', models.BooleanField(default=False)),
                ('account_id', models.CharField(blank=True, max_length=100, null=True)),
                ('public_key', models.CharField(blank=True, max_length=100, null=True)),
                ('private_key', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'get_latest_by': 'update_date',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='middle name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('gender', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.Gender, max_length=100, null=True, verbose_name='gender')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[utils.validators.regex.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('school', models.CharField(blank=True, max_length=300, verbose_name='school')),
                ('ethnicity', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.Ethnicity, max_length=100, null=True, verbose_name='ethnicity')),
                ('disabilities', models.TextField(blank=True, max_length=500, verbose_name='disabilities')),
                ('medical', models.TextField(blank=True, max_length=500, verbose_name='medical')),
                ('behavioral', models.TextField(blank=True, max_length=500, verbose_name='behavioral')),
                ('educational', models.TextField(blank=True, max_length=500, verbose_name='educational')),
                ('dob', models.DateTimeField(blank=True, null=True, verbose_name='date of birth')),
                ('pickup_pin', models.CharField(blank=True, max_length=4, null=True, validators=[utils.validators.regex.RegexValidator(message="Pickup pin must be entered in the format: '1234'. Up to 4 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='pickup pin')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'get_latest_by': 'update_date',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.UserTitle, max_length=100, null=True, verbose_name='user title')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='middle name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('gender', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.Gender, max_length=100, null=True, verbose_name='gender')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[utils.validators.regex.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'get_latest_by': 'update_date',
                'abstract': False,
            },
        ),
    ]

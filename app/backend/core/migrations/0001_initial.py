# Generated by Django 4.1.5 on 2023-01-05 16:53

import ckeditor.fields
import core.models.blog
import core.models.case_study
import core.models.experience
import core.models.news
from django.db import migrations, models
import enumfields.fields
import utils.fields
import utils.fields.enums
import utils.validators.regex
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', utils.fields.AutoSlugField(blank=True, editable=False, populate_from='title', verbose_name='slug')),
                ('image', models.ImageField(default='default_blog_image.jpg', upload_to=core.models.blog.blog_directory_path, verbose_name='image')),
                ('media', models.URLField(blank=True, null=True, verbose_name='media')),
            ],
            options={
                'verbose_name_plural': 'Blog',
            },
        ),
        migrations.CreateModel(
            name='CaseStudy',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', utils.fields.AutoSlugField(blank=True, editable=False, populate_from='title', verbose_name='slug')),
                ('image', models.ImageField(default='default_case_study_image.jpg', upload_to=core.models.case_study.case_study_directory_path, verbose_name='image')),
                ('media', models.URLField(blank=True, null=True, verbose_name='media')),
            ],
            options={
                'verbose_name_plural': 'Case studies',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[utils.validators.regex.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('message', models.TextField(max_length=1000, verbose_name='message')),
            ],
            options={
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', utils.fields.AutoSlugField(blank=True, editable=False, populate_from='title', verbose_name='slug')),
                ('image', models.ImageField(default='default_experience_image.jpg', upload_to=core.models.experience.experience_directory_path, verbose_name='image')),
                ('media', models.URLField(blank=True, null=True, verbose_name='media')),
            ],
            options={
                'verbose_name_plural': 'Experiences',
            },
        ),
        migrations.CreateModel(
            name='HeadCoach',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('address', models.CharField(blank=True, max_length=250, verbose_name='address')),
                ('country', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.Country, max_length=2, null=True, verbose_name='country')),
                ('address_line_1', models.CharField(blank=True, max_length=200, verbose_name='address line one')),
                ('address_line_2', models.CharField(blank=True, max_length=200, verbose_name='address line two')),
                ('address_line_3', models.CharField(blank=True, max_length=200, verbose_name='address line three')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='city')),
                ('locality', models.CharField(blank=True, max_length=50, verbose_name='locality')),
                ('postcode', models.CharField(blank=True, max_length=20, verbose_name='postcode')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.UserTitle, max_length=100, null=True, verbose_name='user title')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='middle name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('gender', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.Gender, max_length=100, null=True, verbose_name='gender')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[utils.validators.regex.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('opportunity_type', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.OpportunityType, max_length=100, null=True, verbose_name='opportunity type')),
                ('highest_qualification', enumfields.fields.EnumField(blank=True, enum=utils.fields.enums.HighestQualification, max_length=100, null=True, verbose_name='highest qualification')),
                ('relevant_experience', models.TextField(blank=True, max_length=1000, null=True, verbose_name='relevant experience')),
                ('how_did_you_hear', models.CharField(blank=True, max_length=100, null=True, verbose_name='how did you hear')),
            ],
            options={
                'verbose_name_plural': 'Head Coach applications',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', utils.fields.AutoSlugField(blank=True, editable=False, populate_from='title', verbose_name='slug')),
                ('image', models.ImageField(default='default_news_image.jpg', upload_to=core.models.news.news_directory_path, verbose_name='image')),
                ('url', models.URLField(verbose_name='news url')),
            ],
            options={
                'verbose_name_plural': 'Case studies',
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('active', models.IntegerField(choices=[(0, 'Inactive Status'), (1, 'Active Status'), (2, 'Coming Soon')], default=1, verbose_name='active')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='id')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('creation_date', utils.fields.CreationDateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('update_date', utils.fields.ModificationDateTimeField(auto_now=True, verbose_name='update_date')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', utils.fields.AutoSlugField(blank=True, editable=False, populate_from='title', verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Policy',
                'verbose_name_plural': 'Policies',
                'ordering': ['id'],
            },
        ),
    ]

version: '3'

services:
    
    db:
        build:
            context: ./backend
            dockerfile: docker/docker_files/Dockerfile.db
            cache_from:
                - "${STAGE_DB_IMAGE}"
        image: "${STAGE_DB_IMAGE}"
        restart: unless-stopped
        environment:
            - POSTGRES_USER=${STAGE_DB_USER}
            - POSTGRES_PASSWORD=${STAGE_DB_PASSWORD}
            - POSTGRES_DB=${STAGE_DB_NAME}
            - POSTGRES_PORT= ${STAGE_DB_PORT}
        container_name: tree_house_db_stage
        networks:
            - main_tree_house_network

    app:
        restart: unless-stopped
        build:
            context: ./backend
            dockerfile: docker/docker_files/Dockerfile.prod
            cache_from:
                - "${STAGE_APP_IMAGE}"
        image: "${STAGE_APP_IMAGE}"
        command: gunicorn --env DJANGO_SETTINGS_MODULE=sammy.conf.prod sammy.wsgi_stage:application --bind 0.0.0.0:8000
        expose:
            - 8000
        env_file:
            - .env
        depends_on:
            - db
        networks:
            - main_tree_house_network
        container_name: tree_house_django_app_stage
    
    redis:
        build:
            context: ./backend
            dockerfile: docker/docker_files/Dockerfile.redis
            cache_from:
                - "${STAGE_REDIS_IMAGE}"
        image: "${STAGE_REDIS_IMAGE}"
        restart: unless-stopped
        expose:
            - 6379
        ports:
            - "6379:6379"
        networks:
            - main_tree_house_network
        container_name: tree_house_redis_stage
            
    celery_worker:
        restart: unless-stopped
        build:
            context: ./backend
            dockerfile: docker/docker_files/Dockerfile.prod
            cache_from:
                - "${STAGE_CELERY_IMAGE}"
        image: "${STAGE_CELERY_IMAGE}"
        command: celery -A sammy worker --loglevel=info --logfile=logs/celery.log
        networks:
            - main_tree_house_network
        env_file:
            - .env
        depends_on:
            - db
            - redis
            - app
        container_name: tree_house_celery_worker_stage

    celery-beat:
        restart: unless-stopped
        build:
            context: ./backend
            dockerfile: docker/docker_files/Dockerfile.prod
            cache_from:
                - "${STAGE_BEAT_IMAGE}"
        image: "${STAGE_BEAT_IMAGE}"
        command: celery -A sammy beat -l info
        networks:
            - main_tree_house_network
        env_file:
            - .env
        depends_on:
            - db
            - redis
            - app
        container_name: tree_house_celery_beat_stage

    flower:
        restart: unless-stopped
        build:
            context: ./backend
            dockerfile: docker/docker_files/Dockerfile.prod
            cache_from:
                - "${STAGE_FLOWER_IMAGE}"
        image: "${STAGE_FLOWER_IMAGE}"
        command: "celery -A sammy flower  
                #--broker=redis://redis:6379//
                #--env-file=.env
                #--basic_auth=${SUPER_USER_NAME}:${SUPER_USER_PASSWORD}"
        ports:
            - 5555:5555
        networks:
            - main_tree_house_network
        env_file:
            - .env
        depends_on:
            - db
            - app
            - redis
            - celery_worker
        container_name: tree_house_flower_stage

    nginx:
        container_name: tree_house_nginx_stage
        build:
            context: ./backend
            dockerfile: docker/docker_files/Dockerfile.nginx
            cache_from:
                - "${STAGE_NGINX_IMAGE}"
        restart: unless-stopped
        image: "${STAGE_NGINX_IMAGE}"
        ports:
            - "80:80"
            - "443:443"
        networks:
            - main_tree_house_network
        depends_on:
            - app

    certbot:
        container_name: tree_house_certbot_stage
        build:
            context: ./backend
            dockerfile: docker/docker_files/Dockerfile.certbot
            cache_from:
                - "${STAGE_CERTBOT_IMAGE}"
        image: "${STAGE_CERTBOT_IMAGE}"


networks:
    main_tree_house_network:
        driver: bridge

